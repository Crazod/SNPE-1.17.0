#!/usr/bin/env python2.7
# -*- mode: python -*-
#=============================================================================
#
#  Copyright (c) 2017 Qualcomm Technologies, Inc.
#  All Rights Reserved.
#  Confidential and Proprietary - Qualcomm Technologies, Inc.
#
#=============================================================================

import importlib
import sys
import traceback

from snpe import snpe_caffe2_to_dlc_utils
from snpe import snpe_caffe2_to_dlc


def sanitize_converter_command(args):
    sanitized_args = []
    for k, v in vars(args).iteritems():
        if k in ['p', 'predict_net', 'e', 'exec_net', 'd', 'dlc']:
            continue
        sanitized_args.append('{}={}'.format(k, v))

    return "{} {}".format(sys.argv[0].split('/')[-1], ' '.join(sanitized_args))

if __name__ == '__main__':
    snpeUtils = snpe_caffe2_to_dlc_utils.SNPEUtils()
    args = snpeUtils.getArgs()
    snpeUtils.setUpLogger(args.verbose)

    converter = snpe_caffe2_to_dlc.Caffe2SnapDnnConverter()
    try:
        converter_command = sanitize_converter_command(args)
        converter.convert( args.predict_net,
                           args.exec_net,
                           args.dlc,
                           args.encoding,
                           args.input_dim,
                           args.enable_preprocessing,
                           args.model_version,
                           converter_command,
                           args.reorder_list,
                           args.opaque_input)
    except Exception as e:
        print 'Encountered Error:', str(e)
        print
        print 'Stack Trace:'
        traceback.print_exc()
        sys.exit(1)
    sys.exit(0)
